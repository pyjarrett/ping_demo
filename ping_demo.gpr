with "config/ping_demo_config.gpr";
project Ping_Demo is

   for Source_Dirs use ("src");
   for Object_Dir use "obj";
   for Create_Missing_Dirs use "True";
   for Exec_Dir use "bin";
   for Main use ("ping_demo.adb");

   type Enabled_Kind is ("enabled", "disabled");
   Compile_Checks : Enabled_Kind := External ("PING_DEMO_COMPILE_CHECKS", "enabled");
   Runtime_Checks : Enabled_Kind := External ("PING_DEMO_RUNTIME_CHECKS", "enabled");
   Style_Checks : Enabled_Kind := External ("PING_DEMO_STYLE_CHECKS", "enabled");
   Contracts_Checks : Enabled_Kind := External ("PING_DEMO_CONTRACTS", "enabled");

   type Build_Kind is ("debug", "optimize");
   Build_Mode : Build_Kind := External ("PING_DEMO_BUILD_MODE", "debug");

   Compile_Checks_Switches := ();
   case Compile_Checks is
      when "enabled" =>
         Compile_Checks_Switches :=
           ("-gnatwa",  -- All warnings
            "-gnatVa",  -- All validity checks
            "-gnatwe"); -- Warnings as errors
      when others => null;
   end case;

   Runtime_Checks_Switches := ();
   case Runtime_Checks is
      when "enabled" => null;
      when others =>
         Runtime_Checks_Switches :=
           ("-gnatp"); -- Suppress checks
   end case;

   Style_Checks_Switches := ();
   case Style_Checks is
      when "enabled" =>
         Style_Checks_Switches :=
           ("-gnaty-d",  -- Disable no DOS line terminators
            "-gnatyM120", -- Maximum line length
            "-gnatyO");  -- Overriding subprograms explicitly marked as such
      when others => null;
   end case;

   Contracts_Switches := ();
   case Contracts_Checks is
      when "enabled" =>
         Contracts_Switches :=
           ("-gnata"); --  Enable assertions and contracts
      when others => null;
   end case;

   Build_Switches := ();
   case Build_Mode is
      when "optimize" =>
         Build_Switches := ("-O3",     -- Optimization
                            "-gnatn"); -- Enable inlining
      when "debug" =>
         Build_Switches := ("-g",   -- Debug info
                            "-Og"); -- No optimization
   end case;

   package Compiler is
      for Default_Switches ("Ada") use
        Compile_Checks_Switches &
        Build_Switches &
        Runtime_Checks_Switches &
        Style_Checks_Switches &
        Contracts_Switches &
        ("-gnatw.X", -- Disable warnings for No_Exception_Propagation
         "-gnatQ");  -- Don't quit. Generate ALI and tree files even if illegalities
   end Compiler;

   package Binder is
      for Switches ("Ada") use ("-Es"); --  Symbolic traceback
   end Binder;

   package Linker is
   -- c:\users\paul\.config\alire\cache\dependencies\gnat_native_11.2.4_2f9c5d6d\bin\gcc.exe ping_demo.o b__ping_demo.o
   -- D:\dev\ada\ping_demo\obj\networking.o D:\dev\ada\ping_demo\obj\networking-sockets.o D:\dev\ada\ping_demo\obj\networking-icmp.o
   -- -LD:\dev\ada\ping_demo\obj\ -LD:\dev\ada\ping_demo\obj\
   -- -LC:/users/paul/.config/alire/cache/dependencies/gnat_native_11.2.4_2f9c5d6d/lib/gcc/x86_64-w64-mingw32/11.2.0/adalib/
   -- -static-libgcc C:/users/paul/.config/alire/cache/dependencies/gnat_native_11.2.4_2f9c5d6d/lib/gcc/x86_64-w64-mingw32/11.2.0/adalib/libgnat.a
   -- -Wl,--stack=0x2000000 -o D:\dev\ada\ping_demo\bin\\ping_demo.exe
      -- for Linker_Options use ("-lwsock32", "-lws2_32");
      for Default_Switches ("Ada") use ("-lwsock32", "-lws2_32");
   end Linker;

end Ping_Demo;
